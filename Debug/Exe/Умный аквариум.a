;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 22.08.2018
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8A
;Program type            : Application
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#define DS1302_E 2
;#define DS1302_SCLK 0
;#define DS1302_IO 1
;#define DS1302_DDR_RTC DDRC
;#define DS1302_PORT_RTC PORTC
;#define DS1302_PIN_RTC PINC
;#define IN1   PORTB.7
;#define IN2   PORTD.5
;#define IN3   PORTD.6
;#define IN4   PORTD.7
;#define left_button  PINB.4
;#define right_button  PINB.3
;#define OK_button      PINB.2
;
;#define step 4096
;
;#define AM 0
;#define PM 0b00100000
;
;#define H12 0b10000000
;#define H24 0
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <io.h>
;#include <stdio.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;   char buffer[16];
;   unsigned long int steps=0;
;   int i=0, counter_sec=0, screen=0;
;   bit flag_get_date=0, flag_start_motor=0, flag_forward=0, left=1, right=1, OK=1, flag_feed=0, flag_first_move=0, flag_ ...
;   volatile eeprom int flag_activ_korm=0, flag_activ_svet=0;
;
;
;typedef    struct
;    {
;    int        Sec;
;    int        Min;
;    int        Hour;
;    int        Month;
;    int        Day;
;    int        Year;
;    int        WeekDay;
;    int        AMPM;
;    int        H12_24;
;    } tpDateTime;
;
;tpDateTime    DateTime;
;
;int DS1302_Bin8_To_BCD(int data)
; 0000 004E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 004F    int nibh;
; 0000 0050    int nibl;
; 0000 0051 
; 0000 0052    nibh=data/10;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	data -> Y+4
;	nibh -> R16,R17
;	nibl -> R18,R19
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0053    nibl=data-(nibh*10);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0054 
; 0000 0055    return((nibh<<4)|nibl);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0056 }
;PCODE: $00000021 VOL: 0
;
;int DS1302_BCD_To_Bin8(int data)
; 0000 0059 {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 005A unsigned char result;
; 0000 005B     result = ((data>>4) & 0b00000111);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;	data -> Y+1
;	result -> R17
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 005C     data &= 0x0F;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 005D     data = data + result*10;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 005E     return data;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 005F }
;PCODE: $00000037 VOL: 0
;
;//посылаем команду или байт данных в часы
;void ds1302_write(unsigned char cmd)
; 0000 0063 {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0064 unsigned char i;
; 0000 0065     DS1302_DDR_RTC |= (1<<DS1302_E) | (1<<DS1302_SCLK);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;	cmd -> Y+1
;	i -> R17
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0066     DS1302_PORT_RTC |= (1<<DS1302_E);//E=1
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0067     delay_us(1);
;PCODE: $00000041 VOL: 0
; 0000 0068     DS1302_DDR_RTC |= (1<<DS1302_IO);//выход
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0069     for(i=0; i<8; i++)
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 006A     {
; 0000 006B         if((cmd&(1<<i)) == 1<<i)
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 006C         {
; 0000 006D             DS1302_PORT_RTC |= (1<<DS1302_IO);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 006E         }
; 0000 006F         else
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0070         {
; 0000 0071             DS1302_PORT_RTC &= ~(1<<DS1302_IO);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0072         }
;PCODE: $0000005F VOL: 0
; 0000 0073         DS1302_PORT_RTC |= (1<<DS1302_SCLK);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0074         delay_us(1);
;PCODE: $00000062 VOL: 0
; 0000 0075         DS1302_PORT_RTC &= ~(1<<DS1302_IO);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0076         DS1302_PORT_RTC &= ~(1<<DS1302_SCLK);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0077     }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0078 }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;//вызываем после записи байта данных в часы
;void ds1302_end_write_data()
; 0000 007B {
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 007C     DS1302_PORT_RTC &= ~(1<<DS1302_E);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 007D }
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;
;unsigned char ds1302_read()
; 0000 0080 {
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0081 unsigned char readbyte;
; 0000 0082 unsigned char i;
; 0000 0083     readbyte=0;
;PCODE: $00000079 VOL: 0
;	readbyte -> R17
;	i -> R16
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0084     DS1302_DDR_RTC &= ~(1<<DS1302_IO);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0085     for(i=0;i<8;i++)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0086     {
; 0000 0087         DS1302_PORT_RTC |= 1<<DS1302_SCLK;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0088         if((DS1302_PIN_RTC & (1<<DS1302_IO))==0)
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0089         {
; 0000 008A             readbyte &= ~(1<<i);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 008B         }
; 0000 008C         else
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 008D         {
; 0000 008E             readbyte |= 1<<i;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 008F         }
;PCODE: $00000099 VOL: 0
; 0000 0090         delay_us(1);
;PCODE: $0000009A VOL: 0
; 0000 0091         DS1302_PORT_RTC &= ~(1<<DS1302_SCLK);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0092         delay_us(1);
;PCODE: $0000009D VOL: 0
; 0000 0093     }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0094     DS1302_PORT_RTC &= ~(1<<DS1302_E);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0095     delay_us(1);
;PCODE: $000000A5 VOL: 0
; 0000 0096     return readbyte;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0097 }
;PCODE: $000000A9 VOL: 0
;
;void DS1302_ReadDateTime() {
; 0000 0099 void DS1302_ReadDateTime() {
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 009A     //read seconds
; 0000 009B     ds1302_write(0x81);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 009C     DateTime.Sec = DS1302_BCD_To_Bin8(ds1302_read());
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 009D     //read minutes
; 0000 009E     ds1302_write(0x83);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 009F     DateTime.Min = DS1302_BCD_To_Bin8(ds1302_read());
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00A0     //read hour
; 0000 00A1     ds1302_write(0x85);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00A2     DateTime.Hour = ds1302_read();
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00A3     DateTime.AMPM = (DateTime.Hour & 0b00100000);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00A4     DateTime.H12_24 = (DateTime.Hour & 0b10000000);
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00A5     if (DateTime.H12_24 == H12) {
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00A6         DateTime.Hour = DateTime.Hour & 0b00011111;
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00A7     }
; 0000 00A8     else {
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00A9         DateTime.Hour = DateTime.Hour & 0b00111111;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00AA     }
;PCODE: $000000DC VOL: 0
; 0000 00AB     DateTime.Hour = DS1302_BCD_To_Bin8(DateTime.Hour);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 00AC     //read day
; 0000 00AD     ds1302_write(0x87);
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00AE     DateTime.Day = DS1302_BCD_To_Bin8(ds1302_read());
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00AF     //read month
; 0000 00B0     ds1302_write(0x89);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00B1     DateTime.Month = DS1302_BCD_To_Bin8(ds1302_read());
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 00B2     //read weekday
; 0000 00B3     ds1302_write(0x8B);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00B4 	DateTime.WeekDay=ds1302_read();
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00B5 	//read year
; 0000 00B6 	ds1302_write(0x8D);
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00B7 	DateTime.Year = DS1302_BCD_To_Bin8(ds1302_read());
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00B8 }
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;
;void DS1302_WriteDateTime() {
; 0000 00BA void DS1302_WriteDateTime() {
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00BB int tmp;
; 0000 00BC 	//set seconds
; 0000 00BD 	ds1302_write(0x80);
;PCODE: $00000105 VOL: 0
;	tmp -> R16,R17
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00BE 	ds1302_write(DS1302_Bin8_To_BCD(DateTime.Sec));
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00BF 	ds1302_end_write_data();
;PCODE: $0000010C VOL: 0
; 0000 00C0 	//set minutes
; 0000 00C1 	ds1302_write(0x82);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00C2 	ds1302_write(DS1302_Bin8_To_BCD(DateTime.Min));
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00C3 	ds1302_end_write_data();
;PCODE: $00000114 VOL: 0
; 0000 00C4 	//set hour
; 0000 00C5 	tmp = (DS1302_Bin8_To_BCD(DateTime.Hour) | DateTime.AMPM | DateTime.H12_24);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00C6 	ds1302_write(0x84);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00C7 	ds1302_write(tmp);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00C8 	ds1302_end_write_data();
;PCODE: $00000125 VOL: 0
; 0000 00C9 	//set dade
; 0000 00CA 	ds1302_write(0x86);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00CB 	ds1302_write(DS1302_Bin8_To_BCD(DateTime.Day));
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00CC 	ds1302_end_write_data();
;PCODE: $0000012D VOL: 0
; 0000 00CD 	//set month
; 0000 00CE 	ds1302_write(0x88);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00CF 	ds1302_write(DS1302_Bin8_To_BCD(DateTime.Month));
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00D0 	ds1302_end_write_data();
;PCODE: $00000135 VOL: 0
; 0000 00D1 	//set day (of week)
; 0000 00D2 	ds1302_write(0x8A);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00D3 	ds1302_write(DateTime.WeekDay);
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00D4 	ds1302_end_write_data();
;PCODE: $0000013B VOL: 0
; 0000 00D5 	//set year
; 0000 00D6 	ds1302_write(0x8C);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00D7 	ds1302_write(DS1302_Bin8_To_BCD(DateTime.Year));
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00D8 	ds1302_end_write_data();
;PCODE: $00000143 VOL: 0
; 0000 00D9 }
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 00DE {
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00DF // Reinitialize Timer 0 value
; 0000 00E0 TCNT0=0x83;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00E1 if (steps > 0)
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00E2 {
; 0000 00E3 
; 0000 00E4     switch(i)
;PCODE: $0000014E VOL: 0
; 0000 00E5         {
; 0000 00E6         case 0:   IN1=0; break;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00E7         case 1:   IN3=1; break;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00E8         case 2:   IN4=0; break;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00E9         case 3:   IN2=1; break;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00EA         case 4:   IN3=0; break;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 00EB         case 5:   IN1=1; break;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00EC         case 6:   IN2=0; break;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00ED         case 7:   IN4=1; break;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00EE         }
;PCODE: $0000017E VOL: 0
; 0000 00EF 
; 0000 00F0 
; 0000 00F1     if(flag_forward==0)
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00F2         {
; 0000 00F3         i++;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00F4         if(i>7)
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00F5             i=0;
;PCODE: $00000188 VOL: 0
; 0000 00F6         }
;PCODE: $00000189 VOL: 0
; 0000 00F7     else
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00F8         {
; 0000 00F9         i--;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00FA         if(i<0)
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00FB             i=7;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00FC         }
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00FD     steps--;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00FE 
; 0000 00FF }
; 0000 0100 else
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0101     {
; 0000 0102     IN1=0;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0103     IN2=0;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 0104     IN3=0;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0105     IN4=0;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0106     }
;PCODE: $000001A3 VOL: 0
; 0000 0107 }
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 010B {
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 010C 
; 0000 010D TCNT1H=0xCF2C >> 8;
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 010E TCNT1L=0xCF2C & 0xff;
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 010F switch(screen)                     // Вывод меню
;PCODE: $000001AD VOL: 0
; 0000 0110  {
; 0000 0111     case 0:                                           // Вывод основной инф.
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 0112     {
; 0000 0113         DS1302_ReadDateTime();
;PCODE: $000001B0 VOL: 0
; 0000 0114         sprintf(buffer, "%02i:%02i:%02i", DateTime.Hour, DateTime.Min, DateTime.Sec);
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 0115         lcd_gotoxy(0,0);
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 0116         lcd_puts(buffer);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 0117 
; 0000 0118         if(flag_get_date == 0 || (DateTime.Hour>23 && DateTime.Min>59))
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 0119             {
; 0000 011A             sprintf(buffer, "%02i,%01i,%02i", DateTime.Day, DateTime.Month, DateTime.Year);
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 011B             lcd_gotoxy(0,1);
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 011C             lcd_puts(buffer);
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 011D             flag_get_date = 1;
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 011E             };
;PCODE: $000001F8 VOL: 0
; 0000 011F 
; 0000 0120         if (flag_activ_korm==0)
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 0121             {
; 0000 0122             lcd_gotoxy(10,0);
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0123             lcd_putsf("K OFF");
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 0124             }
; 0000 0125         else
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0126             {
; 0000 0127             lcd_gotoxy(10,0);
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0128             lcd_putsf("K ON");
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 0129             }
;PCODE: $0000020D VOL: 0
; 0000 012A 
; 0000 012B 
; 0000 012C         if (flag_activ_svet==0)
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 012D             {
; 0000 012E             lcd_gotoxy(10,1);
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 012F             lcd_putsf("S OFF");
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0130             }
; 0000 0131         else
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 0132             {
; 0000 0133             lcd_gotoxy(10,1);
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0134             lcd_putsf("S ON");
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0135             }
;PCODE: $00000222 VOL: 0
; 0000 0136         if(left==0 || right==0)
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 0137             {
; 0000 0138             screen=1;
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0139             left=1;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 013A             right=1;
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 013B             }
; 0000 013C         if(OK==0);
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 013D             OK=1;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 013E         break;
;PCODE: $0000023B VOL: 0
; 0000 013F     }
; 0000 0140 
; 0000 0141     case 1:                                            // Возможность войти в меню настройки
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 0142     {
; 0000 0143         lcd_clear();
;PCODE: $0000023F VOL: 0
; 0000 0144         lcd_gotoxy(3,1);
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 0145         lcd_putsf("HACTROuKA");
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0146 
; 0000 0147         if(left==0 || right==0)
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0148             {
; 0000 0149             lcd_clear();
;PCODE: $0000024F VOL: 0
; 0000 014A             screen=0;
;PCODE: $00000250 VOL: 0
; 0000 014B             left=1;
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 014C             right=1;
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 014D             flag_get_date=0;
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 014E             };
;PCODE: $0000025A VOL: 0
; 0000 014F         if(OK==0)
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 0150             {
; 0000 0151             OK=1;
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0152             screen=2;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0153             }
; 0000 0154         break;
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 0155     }
; 0000 0156 
; 0000 0157     case 2:
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 0158     {
; 0000 0159                                                         // Настройка параметра 1. Вкл\выкл автокормушки
; 0000 015A         lcd_clear();
;PCODE: $00000268 VOL: 0
; 0000 015B         lcd_gotoxy(1,0);
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 015C         lcd_putsf("ABTOKOPMyLLIKA");
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 015D         lcd_gotoxy(1,1);
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 015E         lcd_putsf("PAR 1   ON  OFF");
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 015F 
; 0000 0160         if(left==0)
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0000 0161             {
; 0000 0162             screen=10;
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 0163             left=1;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
; 0000 0164             }
; 0000 0165         if(right==0)
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 0166             {
; 0000 0167             screen=3;
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 0168             right=1;
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 0169             }
; 0000 016A         if(OK==0)
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 016B             {
; 0000 016C             screen=20;
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 016D             OK=1;
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 016E             }
; 0000 016F         break;
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 0170     }
; 0000 0171 
; 0000 0172     case 3:
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0173     {
; 0000 0174         lcd_clear();
;PCODE: $00000296 VOL: 0
; 0000 0175         lcd_gotoxy(4,0);
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 0176         lcd_putsf("PODCBETKA");                       // Настройка параметра 2. Вкл\выкл света
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 0177         lcd_gotoxy(1,1);
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 0178         lcd_putsf("PAR 2   ON  OFF");
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 0179 
; 0000 017A         if(left==0)
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 017B             {
; 0000 017C             screen=2;
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 017D             left=1;
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 017E             }
; 0000 017F         if(right==0)
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 0180             {
; 0000 0181             screen=10;
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 0182             right=1;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 0183             }
; 0000 0184         if(OK==0)
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
; 0000 0185             {
; 0000 0186             screen=30;
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0187             OK=1;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 0188             }
; 0000 0189         break;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 018A     }
; 0000 018B 
; 0000 018C     case 10:                                            // Выход из настройки
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 018D     {
; 0000 018E         lcd_clear();
;PCODE: $000002C4 VOL: 0
; 0000 018F         lcd_gotoxy(5,0);
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 0190         lcd_putsf("EXIT?");
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 0191 
; 0000 0192         if(left==0)
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 0193             {
; 0000 0194             screen=3;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 0195             left=1;
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 0196             }
; 0000 0197         if(right==0)
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 0198             {
; 0000 0199             screen=2;
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0000 019A             right=1;
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 019B             }
; 0000 019C         if(OK==0)
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 019D             {
; 0000 019E             lcd_clear();
;PCODE: $000002E1 VOL: 0
; 0000 019F             flag_get_date=0;
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 01A0             screen=0;
;PCODE: $000002E5 VOL: 0
; 0000 01A1             OK=1;
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 01A2             }
; 0000 01A3         break;
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 01A4     }
; 0000 01A5 
; 0000 01A6     case 20:                                             // Вкл\выкл автокормушки
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 01A7     {
; 0000 01A8         lcd_clear();
;PCODE: $000002EE VOL: 0
; 0000 01A9         if(left==0)
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 01AA             {
; 0000 01AB                 flag_activ_korm=1;
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 01AC                 left=1;
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 01AD                 right=1;
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 01AE             };
;PCODE: $000002FB VOL: 0
; 0000 01AF         if(right==0)
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 01B0             {
; 0000 01B1                 flag_activ_korm=0;
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
; 0000 01B2                 left=1;
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 01B3                 right=1;
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 01B4 
; 0000 01B5             };
;PCODE: $00000308 VOL: 0
; 0000 01B6         if(flag_activ_korm==1)
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 01B7             {
; 0000 01B8                 lcd_gotoxy(1,0);
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 01B9                 lcd_putsf("ABTOKOPMyLLIKA");
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 01BA                 lcd_gotoxy(4,1);
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 01BB                 lcd_putsf("B K JI");
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 01BC             }
; 0000 01BD         else
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
; 0000 01BE             {
; 0000 01BF                 lcd_gotoxy(1,0);
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 01C0                 lcd_putsf("ABTOKOPMyLLIKA");
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 01C1                 lcd_gotoxy(4,1);
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 01C2                 lcd_putsf("B bI K JI");
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 01C3             }
;PCODE: $0000032B VOL: 0
; 0000 01C4         if(OK==0)
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 01C5             {
; 0000 01C6                 screen=2;
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 01C7                 OK=1;
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 01C8             }
; 0000 01C9         break;
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 01CA     }
; 0000 01CB 
; 0000 01CC         case 30:                                             // Вкл\выкл подсветки
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
; 0000 01CD     {
; 0000 01CE         lcd_clear();
;PCODE: $00000339 VOL: 0
; 0000 01CF         if(left==0)
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
; 0000 01D0             {
; 0000 01D1                 flag_activ_svet=1;
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 01D2                 left=1;
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 01D3                 right=1;
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 01D4             };
;PCODE: $00000346 VOL: 0
; 0000 01D5         if(right==0)
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 01D6             {
; 0000 01D7                 flag_activ_svet=0;
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 01D8 
; 0000 01D9                 left=1;
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 01DA                 right=1;
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
; 0000 01DB             };
;PCODE: $00000353 VOL: 0
; 0000 01DC         if(flag_activ_svet==1)
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
; 0000 01DD             {
; 0000 01DE                 lcd_gotoxy(4,0);
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0000 01DF                 lcd_putsf("PODCBETKA");
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0000 01E0                 lcd_gotoxy(4,1);
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
; 0000 01E1                 lcd_putsf("B K JI");
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0000 01E2             }
; 0000 01E3         else
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 01E4             {
; 0000 01E5                 lcd_gotoxy(4,0);
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 01E6                 lcd_putsf("PODCBETKA");
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 01E7                 lcd_gotoxy(4,1);
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
; 0000 01E8                 lcd_putsf("B bI K JI");
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
; 0000 01E9             }
;PCODE: $00000376 VOL: 0
; 0000 01EA         if(OK==0)
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
; 0000 01EB             {
; 0000 01EC                 screen=3;
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
; 0000 01ED                 OK=1;
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 01EE             }
; 0000 01EF         break;
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 01F0     }
; 0000 01F1 
; 0000 01F2 }
;PCODE: $00000381 VOL: 0
; 0000 01F3 
; 0000 01F4 if(counter_sec%10==0)               // Опрос кнопок каждую секунду
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0000 01F5     {
; 0000 01F6         if(left_button==0)
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
; 0000 01F7             left=0;
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 01F8         if(right_button==0)
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 01F9             right=0;
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 01FA         if(OK_button==0)
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0000 01FB             OK=0;
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 01FC     }
;PCODE: $0000039B VOL: 0
; 0000 01FD 
; 0000 01FE if(flag_activ_korm==1 && DateTime.Hour == 20 && flag_start_motor == 0 && flag_feed == 0)
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
; 0000 01FF     {
; 0000 0200         flag_start_motor=1;
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
; 0000 0201         flag_forward=0;
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 0202         flag_feed=1;
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0000 0203         flag_first_move=1;
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 0204     }
; 0000 0205 
; 0000 0206 if(DateTime.Hour != 20)
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 0207     flag_feed=0;
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 0208 
; 0000 0209 if(flag_start_motor == 1 && flag_forward == 0 && steps == 0 && flag_first_move==1)
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
; 0000 020A {
; 0000 020B     steps = step * 30;
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
; 0000 020C     flag_first_move=0;
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
; 0000 020D }
; 0000 020E 
; 0000 020F if(flag_start_motor == 1 && flag_forward == 0 && steps == 0 && flag_first_move == 0)
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 0210 {
; 0000 0211     flag_forward = 1;
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 0212     flag_start_motor=0;
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
; 0000 0213     steps = step * 50;
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
; 0000 0214     flag_return=1;
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
; 0000 0215 }
; 0000 0216 
; 0000 0217 if(flag_return == 1 && steps==0 && flag_forward==1)
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
; 0000 0218 {
; 0000 0219     flag_forward = 0;
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
; 0000 021A     steps = step * 20;
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0000 021B     flag_return=0;
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
; 0000 021C }
; 0000 021D 
; 0000 021E if(flag_activ_svet == 1 && (DateTime.Hour > 8 && DateTime.Hour < 23))
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
; 0000 021F     {
; 0000 0220     PORTB.5 = 1;
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
; 0000 0221     }
; 0000 0222 else
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
; 0000 0223     {
; 0000 0224     PORTB.5 = 0;
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
; 0000 0225     }
;PCODE: $00000426 VOL: 0
; 0000 0226 
; 0000 0227 counter_sec++;
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 0228 if (counter_sec>50)
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
; 0000 0229     counter_sec=0;
;PCODE: $0000042D VOL: 0
; 0000 022A }
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;
;
;void main(void)
; 0000 022E {
;PCODE: $00000432 VOL: 0
; 0000 022F // Declare your local variables here
; 0000 0230 
; 0000 0231 // Input/Output Ports initialization
; 0000 0232 // Port B initialization
; 0000 0233 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0234 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 0235 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0236 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 0237 
; 0000 0238 // Port C initialization
; 0000 0239 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=Out
; 0000 023A DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0000 023B // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=0 Bit0=0
; 0000 023C PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 023D 
; 0000 023E // Port D initialization
; 0000 023F // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0240 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 0241 // State: Bit7=1 Bit6=1 Bit5=1 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
; 0000 0242 PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
; 0000 0243 
; 0000 0244 // Timer/Counter 0 initialization
; 0000 0245 // Clock source: System Clock
; 0000 0246 // Clock value: 7,813 kHz
; 0000 0247 //TCCR0=(1<<CS02) | (0<<CS01) | (1<<CS00);
; 0000 0248 //TCNT0=0xB2;
; 0000 0249 TCCR0=(0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
; 0000 024A TCNT0=0x83;
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
; 0000 024B 
; 0000 024C // Timer/Counter 1 initialization
; 0000 024D // Clock source: System Clock
; 0000 024E // Clock value: 125,000 kHz
; 0000 024F // Mode: Normal top=0xFFFF
; 0000 0250 // OC1A output: Disconnected
; 0000 0251 // OC1B output: Disconnected
; 0000 0252 // Noise Canceler: Off
; 0000 0253 // Input Capture on Falling Edge
; 0000 0254 // Timer Period: 0,5 s
; 0000 0255 // Timer1 Overflow Interrupt: On
; 0000 0256 // Input Capture Interrupt: Off
; 0000 0257 // Compare A Match Interrupt: Off
; 0000 0258 // Compare B Match Interrupt: Off
; 0000 0259 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 025A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0000 025B TCNT1H=0x0B;
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 025C TCNT1L=0xDC;
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
; 0000 025D ICR1H=0x00;
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0000 025E ICR1L=0x00;
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
; 0000 025F OCR1AH=0x00;
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
; 0000 0260 OCR1AL=0x00;
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 0261 OCR1BH=0x00;
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 0262 OCR1BL=0x00;
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 0263 
; 0000 0264 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0265 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (1<<TOIE0);
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0000 0266 
; 0000 0267 
; 0000 0268 // Alphanumeric LCD initialization
; 0000 0269 // Connections are specified in the
; 0000 026A // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 026B // RS - PORTD Bit 0
; 0000 026C // RD - PORTB Bit 1
; 0000 026D // EN - PORTD Bit 1
; 0000 026E // D4 - PORTD Bit 2
; 0000 026F // D5 - PORTD Bit 3
; 0000 0270 // D6 - PORTD Bit 4
; 0000 0271 // D7 - PORTB Bit 6
; 0000 0272 // Characters/line: 16
; 0000 0273 lcd_init(16);
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
; 0000 0274 
; 0000 0275 /*
; 0000 0276 
; 0000 0277 if(flag_set_time<0 && flag_set_time>0)
; 0000 0278 {
; 0000 0279    // Задаем время и параметры (AM/PM следует задавать только при H12)
; 0000 027A     DateTime.Sec = 0;
; 0000 027B     DateTime.Min = 13;
; 0000 027C     DateTime.Hour = 21;
; 0000 027D     DateTime.Month = 9;
; 0000 027E     DateTime.Day = 27;
; 0000 027F     DateTime.Year = 18;
; 0000 0280     //DateTime.WeekDay = 2;
; 0000 0281     //DateTime.AMPM = AM;   //AM/PM
; 0000 0282     DateTime.H12_24 = H24;  //H12/H24
; 0000 0283 
; 0000 0284 // Записываем время в микросхему ds1302
; 0000 0285     DS1302_WriteDateTime();
; 0000 0286 
; 0000 0287     flag_set_time = 1;
; 0000 0288 
; 0000 0289 }
; 0000 028A 
; 0000 028B  */
; 0000 028C 
; 0000 028D // Global enable interrupts
; 0000 028E #asm("sei")
;PCODE: $0000045B VOL: 0
	sei
;PCODE: $0000045C VOL: 0
; 0000 028F 
; 0000 0290 while (1)
;PCODE: $0000045D VOL: 0
; 0000 0291       {
; 0000 0292 
; 0000 0293 
; 0000 0294       }
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
; 0000 0295 }
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
